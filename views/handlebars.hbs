<html>
    <head>
        <title>{{title}}</title>
        <link rel="stylesheet" href="/style.css" />
    </head>
    <body>
        <header style="display: flex; align-items: center; justify-content: space-between;">
            <h1>
                {{title}}
                <a href="/handlebars" class="btn">Home</a>
            </h1>
        </header>

        {{#if errorMessage}}
            <!--<div style="color: red;">{{errorMessage}}</div>-->
            <div class="error">{{errorMessage}}</div>
        {{/if}}

        <form action="/handlebars" method="post">
            <input type="text" name="newData" placeholder="Add data" required />
            <button type="submit">Add</button>
        </form>

        <form action="/handlebars" method="get">
        <!--
        HTML 폼에서 method가 "GET"으로 설정되어 있으면, 브라우저가 폼의 입력값들을 자동으로 URL의 쿼리 파라미터로 붙여서 요청을 보냅니다.
        여기서 name="query"인 <input> 필드에 "kim"이라는 값이 입력되면, 폼이 제출될 때 브라우저는 자동으로 URL을 다음과 같이 구성합니다:
        http://localhost:3000/handlebars?query=kim
        -->
            <input type="text" name="query" placeholder="Search data" value="{{searchQuery}}" />
            <button type="submit">Search</button>
        </form>
        {{#if data.length}}
        <table>
            <tr>
                <th>Data</th>
                <th>Delete</th>
                <th>Update</th>
            </tr>
            {{#each data}}
                <tr>
                    <td>{{this}}</td>
                    <td>
                        <form action="/handlebars/delete" method="post">
                            <input type="hidden" name="deleteData" value="{{this}}" />
                            <button type="submit">Delete</button>
                        </form>
                    </td>
                    <td>
                        <form action="/handlebars/update" method="post">
                            <input type="hidden" name="oldData" value="{{this}}" />
                            <input type="text" name="newData" />
                            <button type="submit">Update</button>
                        </form>
                    </td>
                </tr>
            {{/each}}
        </table>
        {{else}}
            <p>No data available.</p>
        {{/if}}
    </body>
</html>

<!--
name="newData" 속성이 없으면, 해당 <input>의 값이 전송 요청(POST 또는 GET 등)에 포함되지 않습니다.
서버(예: NestJS 컨트롤러)에서는 Body()나 req.body 등으로 받을 때 newData라는 필드로 값을 접근할 수 있게 됩니다.
-->

<!--
Handlebars는 data 배열을 순회하며, 내부 블록을 배열의 각 원소마다 한 번씩 렌더링합니다.
this는 각 반복(iteration) 시점에서 현재 원소를 나타냅니다.
-->